// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiBlazorApp.Data;

#nullable disable

namespace MultiBlazorApp.Data.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MultiBlazorApp.Data.Models.ExtraItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ExtraId")
                        .HasColumnType("int");

                    b.Property<int>("ItemPedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ExtraId");

                    b.HasIndex("ItemPedidoId");

                    b.ToTable("ExtrasItemPedido", (string)null);
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoriaId")
                        .IsRequired()
                        .HasColumnType("nchar(8)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nchar(8)")
                        .HasDefaultValue("ESTA0001");

                    b.Property<DateTime?>("FechaModifica")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdenPorDefecto")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecioPromo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RutaImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoId")
                        .IsRequired()
                        .HasColumnType("nchar(8)");

                    b.Property<int?>("UsuarioModificaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioRegistroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("TipoId");

                    b.HasIndex("UsuarioModificaId");

                    b.HasIndex("UsuarioRegistroId");

                    b.ToTable("Items", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = "CATE0001",
                            Descripcion = "Delicioso Hot Dot + Porción de Papa Amarilla + Cremas",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Salchipapa Andina",
                            OrdenPorDefecto = 0,
                            Precio = 12m,
                            RutaImg = "../img/Salchipapa Personal.jpg",
                            TipoId = "ITEM0001"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = "CATE0001",
                            Descripcion = "Porción Personal de Salchipapa Andina + Tocino + Queso + Cremas",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Salchimonstruo Andino",
                            OrdenPorDefecto = 0,
                            Precio = 15m,
                            RutaImg = "../img/Foto.png",
                            TipoId = "ITEM0001"
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = "CATE0001",
                            Descripcion = "Porción de Salchipapa Andina para 2 + Cremas",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Salchipapa Andina XL",
                            OrdenPorDefecto = 0,
                            Precio = 22m,
                            RutaImg = "../img/Foto.png",
                            TipoId = "ITEM0001"
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = "CATE0001",
                            Descripcion = "Porción de Salchipapa Andina para 2 + Tocino (2) + Queso (2) + Cremas",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Salchimonstruo Andino XL",
                            OrdenPorDefecto = 0,
                            Precio = 28m,
                            RutaImg = "../img/Foto.png",
                            TipoId = "ITEM0001"
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = "CATE0001",
                            Descripcion = "",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Tocino",
                            OrdenPorDefecto = 0,
                            Precio = 2m,
                            RutaImg = "",
                            TipoId = "ITEM0002"
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = "CATE0001",
                            Descripcion = "",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Queso",
                            OrdenPorDefecto = 0,
                            Precio = 2m,
                            RutaImg = "",
                            TipoId = "ITEM0002"
                        },
                        new
                        {
                            Id = 7,
                            CategoriaId = "CATE0001",
                            Descripcion = "",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Huevo",
                            OrdenPorDefecto = 0,
                            Precio = 2m,
                            RutaImg = "",
                            TipoId = "ITEM0002"
                        },
                        new
                        {
                            Id = 8,
                            CategoriaId = "CATE0001",
                            Descripcion = "",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Ají de Pollería",
                            OrdenPorDefecto = 0,
                            Precio = 0m,
                            RutaImg = "",
                            TipoId = "ITEM0003"
                        },
                        new
                        {
                            Id = 9,
                            CategoriaId = "CATE0001",
                            Descripcion = "",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Tártara",
                            OrdenPorDefecto = 0,
                            Precio = 0m,
                            RutaImg = "",
                            TipoId = "ITEM0003"
                        },
                        new
                        {
                            Id = 10,
                            CategoriaId = "CATE0001",
                            Descripcion = "",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Mayonesa",
                            OrdenPorDefecto = 0,
                            Precio = 0m,
                            RutaImg = "",
                            TipoId = "ITEM0003"
                        },
                        new
                        {
                            Id = 11,
                            CategoriaId = "CATE0001",
                            Descripcion = "",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Crema de Rocoto",
                            OrdenPorDefecto = 0,
                            Precio = 0m,
                            RutaImg = "",
                            TipoId = "ITEM0003"
                        },
                        new
                        {
                            Id = 12,
                            CategoriaId = "CATE0001",
                            Descripcion = "",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Golf",
                            OrdenPorDefecto = 0,
                            Precio = 0m,
                            RutaImg = "",
                            TipoId = "ITEM0003"
                        },
                        new
                        {
                            Id = 13,
                            CategoriaId = "CATE0002",
                            Descripcion = "6 Sabrosas Alitas Acevichadas + Porción de Papa Amarilla",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Alitas Acevichadas",
                            OrdenPorDefecto = 0,
                            Precio = 20m,
                            RutaImg = "../img/Alitas Acevichadas.jpg",
                            TipoId = "ITEM0001"
                        });
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioProducto")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("SubCategoriaId")
                        .HasColumnType("nchar(8)");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("SubCategoriaId");

                    b.ToTable("ItemsPedido", (string)null);
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.Parametro", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(4)
                        .HasColumnType("nchar(4)")
                        .IsFixedLength();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ParametroPadreId")
                        .HasColumnType("nchar(4)");

                    b.Property<bool>("PuedeAgregar")
                        .HasColumnType("bit");

                    b.Property<bool>("PuedeEliminar")
                        .HasColumnType("bit");

                    b.Property<bool>("PuedeModificar")
                        .HasColumnType("bit");

                    b.Property<bool>("PuedeVisualizar")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ParametroPadreId");

                    b.ToTable("Parametros", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "ESTA",
                            Nombre = "Estados generales de elementos",
                            PuedeAgregar = false,
                            PuedeEliminar = false,
                            PuedeModificar = false,
                            PuedeVisualizar = true
                        },
                        new
                        {
                            Id = "MESE",
                            Nombre = "Lista de meses",
                            PuedeAgregar = false,
                            PuedeEliminar = false,
                            PuedeModificar = false,
                            PuedeVisualizar = true
                        },
                        new
                        {
                            Id = "PAGI",
                            Nombre = "Paginación",
                            PuedeAgregar = true,
                            PuedeEliminar = true,
                            PuedeModificar = false,
                            PuedeVisualizar = true
                        },
                        new
                        {
                            Id = "GENE",
                            Nombre = "Géneros",
                            PuedeAgregar = true,
                            PuedeEliminar = false,
                            PuedeModificar = false,
                            PuedeVisualizar = true
                        },
                        new
                        {
                            Id = "ECIV",
                            Nombre = "Estados Civiles",
                            PuedeAgregar = true,
                            PuedeEliminar = false,
                            PuedeModificar = false,
                            PuedeVisualizar = true
                        },
                        new
                        {
                            Id = "ROLP",
                            Nombre = "Roles de Personas",
                            PuedeAgregar = true,
                            PuedeEliminar = false,
                            PuedeModificar = false,
                            PuedeVisualizar = true
                        },
                        new
                        {
                            Id = "TIDO",
                            Nombre = "Tipos de Documento",
                            PuedeAgregar = true,
                            PuedeEliminar = false,
                            PuedeModificar = false,
                            PuedeVisualizar = true
                        },
                        new
                        {
                            Id = "ITEM",
                            Nombre = "Tipos de Item",
                            PuedeAgregar = false,
                            PuedeEliminar = false,
                            PuedeModificar = false,
                            PuedeVisualizar = true
                        },
                        new
                        {
                            Id = "CATE",
                            Nombre = "Categorías de Item",
                            PuedeAgregar = false,
                            PuedeEliminar = false,
                            PuedeModificar = false,
                            PuedeVisualizar = true
                        },
                        new
                        {
                            Id = "ESPE",
                            Nombre = "Estados Pedido",
                            PuedeAgregar = false,
                            PuedeEliminar = false,
                            PuedeModificar = false,
                            PuedeVisualizar = true
                        },
                        new
                        {
                            Id = "SCAT",
                            Nombre = "Sub-Categorías de Item",
                            PuedeAgregar = false,
                            PuedeEliminar = false,
                            PuedeModificar = false,
                            PuedeVisualizar = true
                        });
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.ParametroValor", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(8)
                        .HasColumnType("nchar(8)")
                        .IsFixedLength();

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Eliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("EstadoId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nchar(8)")
                        .HasDefaultValue("ESTA0001")
                        .IsFixedLength();

                    b.Property<DateTime?>("FechaModifica")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("Orden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(99);

                    b.Property<string>("ParametroId")
                        .IsRequired()
                        .HasColumnType("nchar(4)");

                    b.Property<int?>("UsuarioModificaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioRegistroId")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ValorExterno")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ValorPadreId")
                        .HasColumnType("nchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ParametroId");

                    b.HasIndex("UsuarioModificaId");

                    b.HasIndex("UsuarioRegistroId");

                    b.HasIndex("ValorPadreId");

                    b.ToTable("ParametroValores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "ESTA0001",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ESTA",
                            Valor = "ACTIVO"
                        },
                        new
                        {
                            Id = "ESTA0002",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ESTA",
                            Valor = "INACTIVO"
                        },
                        new
                        {
                            Id = "MESE0001",
                            Descripcion = "ENERO",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 1,
                            ParametroId = "MESE",
                            Valor = "1"
                        },
                        new
                        {
                            Id = "MESE0002",
                            Descripcion = "FEBRERO",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 2,
                            ParametroId = "MESE",
                            Valor = "2"
                        },
                        new
                        {
                            Id = "MESE0003",
                            Descripcion = "MARZO",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 3,
                            ParametroId = "MESE",
                            Valor = "3"
                        },
                        new
                        {
                            Id = "MESE0004",
                            Descripcion = "ABRIL",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 4,
                            ParametroId = "MESE",
                            Valor = "4"
                        },
                        new
                        {
                            Id = "MESE0005",
                            Descripcion = "MAYO",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 5,
                            ParametroId = "MESE",
                            Valor = "5"
                        },
                        new
                        {
                            Id = "MESE0006",
                            Descripcion = "JUNIO",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 6,
                            ParametroId = "MESE",
                            Valor = "6"
                        },
                        new
                        {
                            Id = "MESE0007",
                            Descripcion = "JULIO",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 7,
                            ParametroId = "MESE",
                            Valor = "7"
                        },
                        new
                        {
                            Id = "MESE0008",
                            Descripcion = "AGOSTO",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 8,
                            ParametroId = "MESE",
                            Valor = "8"
                        },
                        new
                        {
                            Id = "MESE0009",
                            Descripcion = "SETIEMBRE",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 9,
                            ParametroId = "MESE",
                            Valor = "9"
                        },
                        new
                        {
                            Id = "MESE0010",
                            Descripcion = "OCTUBRE",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 10,
                            ParametroId = "MESE",
                            Valor = "10"
                        },
                        new
                        {
                            Id = "MESE0011",
                            Descripcion = "NOVIEMBRE",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 11,
                            ParametroId = "MESE",
                            Valor = "11"
                        },
                        new
                        {
                            Id = "MESE0012",
                            Descripcion = "DICIEMBRE",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 12,
                            ParametroId = "MESE",
                            Valor = "12"
                        },
                        new
                        {
                            Id = "PAGI0001",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 1,
                            ParametroId = "PAGI",
                            Valor = "10"
                        },
                        new
                        {
                            Id = "PAGI0002",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 2,
                            ParametroId = "PAGI",
                            Valor = "25"
                        },
                        new
                        {
                            Id = "PAGI0003",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 3,
                            ParametroId = "PAGI",
                            Valor = "50"
                        },
                        new
                        {
                            Id = "PAGI0004",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 4,
                            ParametroId = "PAGI",
                            Valor = "100"
                        },
                        new
                        {
                            Id = "GENE0001",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "GENE",
                            Valor = "MASCULINO"
                        },
                        new
                        {
                            Id = "GENE0002",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "GENE",
                            Valor = "FEMENINO"
                        },
                        new
                        {
                            Id = "ECIV0001",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ECIV",
                            Valor = "SOLTERO"
                        },
                        new
                        {
                            Id = "ECIV0002",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ECIV",
                            Valor = "CASADO"
                        },
                        new
                        {
                            Id = "ROLP0001",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ROLP",
                            Valor = "ADMIN"
                        },
                        new
                        {
                            Id = "ROLP0002",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ROLP",
                            Valor = "USUARIO"
                        },
                        new
                        {
                            Id = "TIDO0001",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "TIDO",
                            Valor = "DNI"
                        },
                        new
                        {
                            Id = "TIDO0002",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "TIDO",
                            Valor = "RUC"
                        },
                        new
                        {
                            Id = "TIDO0003",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "TIDO",
                            Valor = "CARNET DE EXTRANJERÍA"
                        },
                        new
                        {
                            Id = "TIDO0004",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "TIDO",
                            Valor = "PASAPORTE"
                        },
                        new
                        {
                            Id = "TIDO0005",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "TIDO",
                            Valor = "PARTIDA DE NACIMIENTO"
                        },
                        new
                        {
                            Id = "ITEM0001",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ITEM",
                            Valor = "Productos"
                        },
                        new
                        {
                            Id = "ITEM0002",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ITEM",
                            Valor = "Extras"
                        },
                        new
                        {
                            Id = "ITEM0003",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ITEM",
                            Valor = "Cremas"
                        },
                        new
                        {
                            Id = "CATE0001",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "CATE",
                            Valor = "Salchipapas"
                        },
                        new
                        {
                            Id = "CATE0002",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "CATE",
                            Valor = "Alitas"
                        },
                        new
                        {
                            Id = "ESPE0001",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ESPE",
                            Valor = "Por Aprobar"
                        },
                        new
                        {
                            Id = "ESPE0002",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ESPE",
                            Valor = "En Preparación"
                        },
                        new
                        {
                            Id = "ESPE0003",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ESPE",
                            Valor = "En Camino"
                        },
                        new
                        {
                            Id = "ESPE0004",
                            Eliminado = false,
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Orden = 0,
                            ParametroId = "ESPE",
                            Valor = "Entregado"
                        });
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoPedidoId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nchar(8)")
                        .HasDefaultValue("ESPE0001");

                    b.Property<DateTime?>("FechaModifica")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreReceptor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroWhatsapp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioRegistroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoPedidoId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioModificaId");

                    b.HasIndex("UsuarioRegistroId");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("EstadoId")
                        .IsRequired()
                        .HasColumnType("nchar(8)");

                    b.Property<DateTime?>("FechaModifica")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroWhatsapp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RolId")
                        .IsRequired()
                        .HasColumnType("nchar(8)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UsuarioModificaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioRegistroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("RolId");

                    b.HasIndex("UsuarioModificaId");

                    b.HasIndex("UsuarioRegistroId");

                    b.ToTable("Usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApellidoMaterno = "ADMIN",
                            ApellidoPaterno = "ADMIN",
                            Correo = "ADMIN@GMAIL.COM",
                            Direccion = "CALLE ABC",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "ADMIN",
                            NumeroWhatsapp = "123465798",
                            Password = "b053f7175cf143e5022787fd56ab221dbdf051832f7e26348d07c593fe237e15",
                            RolId = "ROLP0001",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            ApellidoMaterno = "USUARIO",
                            ApellidoPaterno = "USUARIO",
                            Correo = "USUARIO@GMAIL.COM",
                            Direccion = "CALLE ABC",
                            Eliminado = false,
                            EstadoId = "ESTA0001",
                            FechaRegistro = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "USUARIO",
                            NumeroWhatsapp = "123465798",
                            Password = "b053f7175cf143e5022787fd56ab221dbdf051832f7e26348d07c593fe237e15",
                            RolId = "ROLP0002",
                            UserName = "usuario"
                        });
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.ExtraItemPedido", b =>
                {
                    b.HasOne("MultiBlazorApp.Data.Models.Item", "Extra")
                        .WithMany()
                        .HasForeignKey("ExtraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MultiBlazorApp.Data.Models.ItemPedido", "ItemPedido")
                        .WithMany("Extras")
                        .HasForeignKey("ItemPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Extra");

                    b.Navigation("ItemPedido");
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.Item", b =>
                {
                    b.HasOne("MultiBlazorApp.Data.Models.ParametroValor", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiBlazorApp.Data.Models.ParametroValor", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MultiBlazorApp.Data.Models.ParametroValor", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MultiBlazorApp.Data.Models.Usuario", "UsuarioModifica")
                        .WithMany()
                        .HasForeignKey("UsuarioModificaId");

                    b.HasOne("MultiBlazorApp.Data.Models.Usuario", "UsuarioRegistro")
                        .WithMany()
                        .HasForeignKey("UsuarioRegistroId");

                    b.Navigation("Categoria");

                    b.Navigation("Estado");

                    b.Navigation("Tipo");

                    b.Navigation("UsuarioModifica");

                    b.Navigation("UsuarioRegistro");
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.ItemPedido", b =>
                {
                    b.HasOne("MultiBlazorApp.Data.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MultiBlazorApp.Data.Models.Pedido", "Pedido")
                        .WithMany("Items")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MultiBlazorApp.Data.Models.ParametroValor", "SubCategoria")
                        .WithMany()
                        .HasForeignKey("SubCategoriaId");

                    b.Navigation("Item");

                    b.Navigation("Pedido");

                    b.Navigation("SubCategoria");
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.Parametro", b =>
                {
                    b.HasOne("MultiBlazorApp.Data.Models.Parametro", "ParametroPadre")
                        .WithMany()
                        .HasForeignKey("ParametroPadreId");

                    b.Navigation("ParametroPadre");
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.ParametroValor", b =>
                {
                    b.HasOne("MultiBlazorApp.Data.Models.ParametroValor", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MultiBlazorApp.Data.Models.Parametro", "Parametro")
                        .WithMany()
                        .HasForeignKey("ParametroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiBlazorApp.Data.Models.Usuario", "UsuarioModifica")
                        .WithMany()
                        .HasForeignKey("UsuarioModificaId");

                    b.HasOne("MultiBlazorApp.Data.Models.Usuario", "UsuarioRegistro")
                        .WithMany()
                        .HasForeignKey("UsuarioRegistroId");

                    b.HasOne("MultiBlazorApp.Data.Models.ParametroValor", "ValorPadre")
                        .WithMany()
                        .HasForeignKey("ValorPadreId");

                    b.Navigation("Estado");

                    b.Navigation("Parametro");

                    b.Navigation("UsuarioModifica");

                    b.Navigation("UsuarioRegistro");

                    b.Navigation("ValorPadre");
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.Pedido", b =>
                {
                    b.HasOne("MultiBlazorApp.Data.Models.ParametroValor", "EstadoPedido")
                        .WithMany()
                        .HasForeignKey("EstadoPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiBlazorApp.Data.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.HasOne("MultiBlazorApp.Data.Models.Usuario", "UsuarioModifica")
                        .WithMany()
                        .HasForeignKey("UsuarioModificaId");

                    b.HasOne("MultiBlazorApp.Data.Models.Usuario", "UsuarioRegistro")
                        .WithMany()
                        .HasForeignKey("UsuarioRegistroId");

                    b.Navigation("EstadoPedido");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioModifica");

                    b.Navigation("UsuarioRegistro");
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.Usuario", b =>
                {
                    b.HasOne("MultiBlazorApp.Data.Models.ParametroValor", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiBlazorApp.Data.Models.ParametroValor", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MultiBlazorApp.Data.Models.Usuario", "UsuarioModifica")
                        .WithMany()
                        .HasForeignKey("UsuarioModificaId");

                    b.HasOne("MultiBlazorApp.Data.Models.Usuario", "UsuarioRegistro")
                        .WithMany()
                        .HasForeignKey("UsuarioRegistroId");

                    b.Navigation("Estado");

                    b.Navigation("Rol");

                    b.Navigation("UsuarioModifica");

                    b.Navigation("UsuarioRegistro");
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.ItemPedido", b =>
                {
                    b.Navigation("Extras");
                });

            modelBuilder.Entity("MultiBlazorApp.Data.Models.Pedido", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
